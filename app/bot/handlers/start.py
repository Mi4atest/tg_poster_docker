from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
import random

from app.bot.keyboards.main_keyboard import get_main_keyboard
from app.bot.handlers.post_creation import PostCreation
from app.bot.utils.spoiler_phrases import SPOILER_PHRASES

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    """Handle the /start command."""
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É –∏–∑ —Å–ø–∏—Å–∫–∞
    spoiler_phrase = random.choice(SPOILER_PHRASES)

    # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø—Ä–∞–≤–∞ –æ—Ç –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—ã! –ù–∞–∂–∏–º–∞–π \"–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç\"\n\n"
        f"<tg-spoiler>{spoiler_phrase}</tg-spoiler>",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )

@router.callback_query(F.data == "create_post")
async def create_post_callback(callback: CallbackQuery, state: FSMContext):
    """Handle the 'Create Post' button."""
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    buttons = [[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    await callback.message.edit_text(
        "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞.\n\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–∏–¥–µ–æ.",
        reply_markup=keyboard
    )
    # Set state to waiting for post text
    await state.set_state(PostCreation.waiting_for_text)
    await callback.answer()

@router.callback_query(F.data == "pending_posts")
async def pending_posts_callback(callback: CallbackQuery):
    """Handle the 'Pending Posts' button."""
    await callback.message.edit_text(
        "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤...\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
    )
    # Fetch posts from API and display them
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è post_management
    from app.bot.handlers.post_management import show_pending_posts
    await show_pending_posts(callback.message)
    await callback.answer()

@router.callback_query(F.data == "archive_posts")
async def archive_posts_callback(callback: CallbackQuery):
    """Handle the 'Archive' button."""
    await callback.message.edit_text(
        "üìÅ –ó–∞–≥—Ä—É–∂–∞—é –∞—Ä—Ö–∏–≤ –ø–æ—Å—Ç–æ–≤...\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
    )
    # Fetch archived posts from API and display them
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è post_management
    from app.bot.handlers.post_management import show_archived_posts
    await show_archived_posts(callback.message)
    await callback.answer()
